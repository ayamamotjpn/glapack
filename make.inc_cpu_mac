VER = CPU

##########################################################
########## Select F90 compiler and flags  (Mandatory) 
##########################################################

#BIND = bin_86
OBJD = obj_86
JDIR = obj_86
IDIR = -I$(JDIR)

# for profiler
PG = -pg
PG =

# chose fortran compiler
#F90 = ifort
F90 = gfortran
#F90 = pgf90
#F90 = nvfortran

# chose c compiler
CC = gcc
#CC = icc
#CC = pgcc
#CC = nvcc

ifeq ($(F90),ifort)
  INSD = intel
else ifeq ($(F90),gfortran)
  INSD = gnu
else ifeq ($(F90),nvfortran)
  INSD = nvidia
else ifeq ($(F90),pgf90)
  INSD = pgi
endif

FGSLINC = -I$(HOME)/local/include/$(INSD)
FGSLLIB = -L$(HOME)/local/lib/$(INSD) -lfgsl

GSL = $(HOME)/local/lib # own libgsl and libgslcblas
GSLLIB = -L$(GSL) -lgsl -lgslcblas

# for -DCUDAFOR (only for nvfortran or pgf90)
# CUBLASINC = -I$(CUDAHOME)/cuda-$(CUDAVER)/targets/x86_64-linux/include

ifeq ($(F90),ifort)
   INSD = intel
   FPIC = -fPIC
   FPP = -fpp
   MJ = -module $(JDIR)
   MKLROOT = $(HOME)/app/oneapi/mkl/2022.1.0
   MKL = -L$(MKLROOT)/lib -L$(HOME)/lib
   MKLBLAS = $(MKLROOT)/include/mkl_spblas.f90
   MKLINC = -I$(MKLROOT)/include
   MKL += -lmkl_intel_lp64 -lmkl_sequential -lmkl_core
else ifeq ($(F90),gfortran)
   INSD = gnu
   FPIC = -fPIC
   FPP = -cpp
   MJ = -J$(JDIR)
else ifeq ($(F90),pgf90)
   INSD = pgi
   #FPIC = -Xcompiler -fPIC
   FPIC = -fPIC 
   FPP = -Mpreprocess
   MJ = -module $(JDIR)
   NVROOT = /home/app/hpc_sdk/Linux_x86_64/22.2/compilers
else ifeq ($(F90),nvfortran)
   INSD = nvidia
   #FPIC = -Xcompiler -fPIC
   FPIC = -fPIC      
   FPP = -Mpreprocess
   MJ = -module $(JDIR)
   NVROOT = /home/app/hpc_sdk/Linux_x86_64/22.2/compilers
endif

ifeq ($(CC),nvcc)
   CFLAGS = -Xcompiler -fPIC
   COPT = -O2
else ifeq ($(CC),g++)
   CFLAGS = $(FPIC) -fopenmp
   COPT = -O2
else ifeq ($(CC),icpc)
   CFLAGS = $(FPIC) -qopenmp
   COPT = -O2
endif


LAPACK = -L/usr/local/Cellar/lapack/3.10.1_1/lib -llapack -lblas

INSTLIBDIR=$(HOME)/lib/$(INSD)
INSTINCDIR=$(HOME)/include/$(INSD)
LIB =  $(FGSLLIB) $(GSLLIB) $(MKL) $(LAPACK)
INC = $(FGSLINC)  $(MKLINC) -I$(JDIR) # for cpu version fgsl.mod

# *****at the moment, openmp does not work*****

# optimization flag
ifeq ($(F90),ifort)
    OPT = -g -check all -traceback
    #OPT = -O3 -qopenmp
    #OPT = -O3
    SHARED = -shared
endif

ifeq ($(F90),gfortran)
    OPT = -g -fcheck=all
    #OPT = -O3 -fopenmp
    #OPT = -O3
    SHARED = -shared
endif

ifeq ($(F90),pgf90)
   OPT = -O3  -mp
   SHARED = -shared
endif

ifeq ($(F90),nvfortran) 
   OPT = -O3 -mp
   SHARED = -shared
endif

FCOPT = -c $(OPT) $(PG) $(FPP) $(FPIC) $(IDIR) $(MJ) -fPIC
CCOPT = -c $(COPT) $(PG) $(CFLAGS)

