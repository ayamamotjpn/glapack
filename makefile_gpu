include make.inc_gpu

ARC = 86
OBJD = obj_$(ARC)
BIND = bin_$(ARC)
CUD = $(shell pwd)

#swp_band2d_g : $(PRG)

FSRC = glapack.f90

# cuda-11.8 incliude fortran_thunking.c
# Fortran wrapper fortran.c for using cuda
#CSRC = $(CUDAROOT)/src/fortran_thunking.c 

OBJ = $(OBJD)/glapack.o

ifeq ($(VER),GPU)
	OBJ += $(OBJD)/cublasXt.o $(OBJD)/fortran.o
	FSRC += cublasXt.f90
endif

MAGMABLAS = $(MAGMAROOT)/control/magmablas_   # for magmablasf interface
INCC = $(CUDAINC) -I$(CUDAROOT)/src -I./       #for using fortran.c fortran interface of cublas

all : lib/libglapack_gpu.so lib/libgblas_gpu.so

lib/libglapack_gpu.so : $(OBJ) 
	$(F90) $(SHARED) $(LIB) $^ -o $@     # for gpu version with magma and cublas

lib/libgblas_gpu.so : $(OBJD)/fortran.o
	$(CC) $(SHARED) $(LIB) $< -o $@
	#$(PRG) : $(OBJ)
	#$(F90) -pg $(JDIR) $(LIB) $^ -o $@     # for gpu version

$(OBJD)/cublasXt.o : cublasXt.f90
	$(F90) $(FCOPT) $(INC) $< -o $@
	
$(OBJD)/glapack.o : glapack.f90 
	$(F90) $(FCOPT) $(INC) $< -o $@

$(OBJD)/mkl_blas.o : $(MKLBLAS)
	$(F90) $(FCOPT) $(INC) $< -o $@

$(OBJD)/fortran.o : $(CUDAROOT)/src/fortran.c
	$(CC) $(CCOPT) $(CUDAINC) -DCUBLAS_GFORTRAN $< -o $@

#ifneq ($(F90),pgf90)		
#$(OBJD)/fortran.o : $(CSRC) # for getting fortran interface for cublas
#	$(CC) $(CCOPT) $(INCC) -DCUBLAS_GFORTRAN $< -o $(OBJD)/fortran.o 
#endif

install :
	cp lib/libglapack_gpu.so $(INSTLIBDIR)
	cp $(JDIR)/glapack.mod $(INSTINCDIR)

depend .depend :
	makedepf90 -b $(OBJD) -DMAGMA $(FSRC)  > .depend

clean :
	rm -f lib/libglapack_gpu.so lib/libgblas_gpu.so $(JDIR)/cublasxt.mod $(OBJ)

include .depend
